# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
    - uses: actions/checkout@v4
    - name: Checkout
      uses: actions/checkout@v4
      with:
       ref: gh-pages
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: package-lock.json
    - run: npm ci
      working-directory: site

    - name: Build page
      run: npm run build

    - name: Copy static assets
      run: cp -r styles dist/

    - name: Commit
      run: |
        git config --global user.name github-actions
        git config --global user.email github-actions@github.com
        git checkout  gh-pages
        git add -f dist
        git commit -m "Automated site build"
        git push -f origin gh-pages

  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: build
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
    - uses: actions/checkout@v4
    - name: Checkout
      uses: actions/checkout@v4
      with:
       ref: gh-pages
    - name: Upload artefacts
      # if: steps.filter.outputs.database == 'true' || steps.filter.outputs.site == 'true'
      uses: actions/upload-pages-artifact@v1
      with:
        path: dist
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2
